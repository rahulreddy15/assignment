services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "product_updates:1:1,country:1:1,product_discounts:1:1,monitoring:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093
      - SERVICE_NAME=event-producer-api
    env_file:
      - .env
    depends_on:
      - kafka
  
  monitoring-consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile.monitor
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093
      - KAFKA_MONITORING_TOPIC=monitoring
      - SERVICE_NAME=monitoring-consumer
      - DATABASE_PATH=/app/data/monitoring.db
    volumes:
      - ./data:/app/data
    depends_on:
      - kafka
  
  downstream:
    build:
      context: ./consumer
      dockerfile: Dockerfile.downstream
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093
      - SERVICE_NAME=downstream
    depends_on:
      - kafka
  
  monitoring-dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "7070:7070"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093
      - SERVICE_NAME=monitoring-dashboard
      - DATABASE_PATH=/app/data/monitoring.db
    volumes:
      - ./data:/app/data
    depends_on:
      - kafka
      - monitoring-consumer
  
  monitoring-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.monitoring-frontend
    ports:
      - "8080:80"
    depends_on:
      - monitoring-dashboard

volumes:
  data: